# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-webapp:
    # Add 'id-token' with the intended permissions for workload identity federation
    permissions:
      contents: 'read'
      id-token: 'write'
      checks: 'write'

    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Install packages
        run: npm ci
        
      - name: Build
        run: npm run build
        
      ## TODO: DO NOT MERGE WITH THIS COMMENTED OUT
      # - name: Lint
      #   run: npm run lint

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          project_id: fim-queueing
          workload_identity_provider: '${{ secrets.WIF_PROVIDER }}'
          service_account: 'deployment-service@fim-queueing.iam.gserviceaccount.com'

      - run: |
          echo "SERVICE_ACCOUNT_KEY=$(cat "${{ steps.auth.outputs.credentials_file_path }}" | tr -d '\n')" >> $GITHUB_ENV

      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ env.SERVICE_ACCOUNT_KEY }}"
          projectId: fim-queueing
          channelId: ${{ github.ref }}
  
  build-functions:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install packages (webapp)
        run: npm ci
      - name: Install packages (functions)
        run: npm ci --prefix=functions

      - name: Build
        run: npm run build --prefix=functions
      
      - name: Lint
        run: npx eslint 'functions/src/**/*.{js,ts}' -c functions/.eslintrc.js